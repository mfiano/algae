(in-package #:net.mfiano.lisp.algae.noise)

(u:define-constant +simplex-1d/scale+ 0.395d0)

(u:defun-inline %simplex-1d (x)
  (declare (optimize speed)
           (f50 x))
  (flet ((noise (hash x)
           (let* ((s (- 1 (* x x)))
                  (h (logand hash 15))
                  (grad (if (zerop (logand h 8))
                            (* (1+ (logand h 7)) x)
                            (* (- (1+ (logand h 7))) x))))
             (if (plusp s)
                 (* (expt s 4) grad)
                 0d0))))
    (let* ((i1 (floor x))
           (i2 (1+ i1))
           (x1 (- x i1))
           (x2 (1- x1))
           (p +permutation+)
           (n1 (noise (pget p i1) x1))
           (n2 (noise (pget p i2) x2)))
      (float (* (+ n1 n2) +simplex-1d/scale+) 1f0))))

(defun simplex-1d (x)
  (declare (real x))
  (%simplex-1d (float x 1d0)))
